openapi: 3.0.0
info:
  title: Movie Graph Metadata API
  version: 1.0.0
  description: API for accessing movie and person metadata in the Movie Graph system

servers:
  - url: /api/v1
    description: Base API path

components:
  schemas:
    Movie:
      type: object
      properties:
        id:
          type: string
          description: IMDb title ID (tconst)
        titleType:
          type: string
          enum: [movie, tvSeries, tvEpisode, tvMiniSeries]
        primaryTitle:
          type: string
        originalTitle:
          type: string
        isAdult:
          type: boolean
        startYear:
          type: integer
          nullable: true
        endYear:
          type: integer
          nullable: true
        runtimeMinutes:
          type: integer
          nullable: true
        genres:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - titleType
        - primaryTitle
        - originalTitle
        - isAdult
        - genres

    Person:
      type: object
      properties:
        id:
          type: string
          description: IMDb name ID (nconst)
        primaryName:
          type: string
        birthYear:
          type: integer
          nullable: true
        deathYear:
          type: integer
          nullable: true
        primaryProfessions:
          type: array
          items:
            type: string
        knownForTitles:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - primaryName
        - primaryProfessions

    MovieCrew:
      type: object
      properties:
        movieId:
          type: string
        directorIds:
          type: array
          items:
            type: string
        writerIds:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
      required:
        - movieId
        - directorIds
        - writerIds

    MoviePrincipal:
      type: object
      properties:
        movieId:
          type: string
        personId:
          type: string
        ordering:
          type: integer
        category:
          type: string
        job:
          type: string
          nullable: true
        characters:
          type: array
          items:
            type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
      required:
        - movieId
        - personId
        - ordering
        - category

    Error:
      type: object
      properties:
        error:
          type: string
        code:
          type: string
        details:
          type: object
      required:
        - error

    PaginatedResponse:
      type: object
      properties:
        total:
          type: integer
        results:
          type: array
          items:
            type: object
      required:
        - total
        - results

  parameters:
    limitParam:
      name: limit
      in: query
      description: Number of results per page
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 10
    
    offsetParam:
      name: offset
      in: query
      description: Number of results to skip
      schema:
        type: integer
        minimum: 0
        default: 0

paths:
  /movies/search:
    get:
      summary: Search movies
      parameters:
        - name: query
          in: query
          description: Search query for movie titles
          schema:
            type: string
        - name: type
          in: query
          description: Filter by title type
          schema:
            type: string
            enum: [movie, tvSeries, tvEpisode, tvMiniSeries]
        - name: year
          in: query
          description: Filter by year
          schema:
            type: integer
        - name: genre
          in: query
          description: Filter by genre
          schema:
            type: string
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
      responses:
        '200':
          description: Successful search
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Movie'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /movies/{id}:
    get:
      summary: Get movie by ID
      parameters:
        - name: id
          in: path
          required: true
          description: Movie ID (tconst)
          schema:
            type: string
      responses:
        '200':
          description: Movie found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /movies/{id}/crew:
    get:
      summary: Get movie crew information
      parameters:
        - name: id
          in: path
          required: true
          description: Movie ID (tconst)
          schema:
            type: string
      responses:
        '200':
          description: Crew information found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieCrew'
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /movies/{id}/cast:
    get:
      summary: Get movie cast information
      parameters:
        - name: id
          in: path
          required: true
          description: Movie ID (tconst)
          schema:
            type: string
        - name: role
          in: query
          description: Filter by role
          schema:
            type: string
      responses:
        '200':
          description: Cast information found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MoviePrincipal'
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /people/search:
    get:
      summary: Search people
      parameters:
        - name: query
          in: query
          description: Search query for person names
          schema:
            type: string
        - name: profession
          in: query
          description: Filter by profession
          schema:
            type: string
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
      responses:
        '200':
          description: Successful search
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Person'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /people/{id}:
    get:
      summary: Get person by ID
      parameters:
        - name: id
          in: path
          required: true
          description: Person ID (nconst)
          schema:
            type: string
      responses:
        '200':
          description: Person found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '404':
          description: Person not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 